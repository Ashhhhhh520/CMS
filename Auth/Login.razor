@layout EmptyLayout
@page "/Login"
@attribute [AllowAnonymous]
@using CMS.Auth

<div class="d-flex align-center" style="height:calc(100% - 96px)">
    <MCard Width=510 Height=680 Class="mx-auto my-auto">
        <div style="height:60px;"></div>
        <div class="mt-2 mx-auto text-center" style="width:420px;">
            <MAvatar Size=80>
                <MImage Src="/admin/imgs/avatar/1.svg">
                </MImage>
            </MAvatar>
            <h5 class="mt-2 mb-12">Welcome to Admin System</h5>
            <MTextField TValue="string" @bind-Value="UserName"
                        Label="User Name"
                        Outlined
                        HideDetails="@("auto")">
            </MTextField>
            <MTextField TValue="string" @bind-Value="Password"
                        Class="mt-10"
                        Label="Password"
                        Type="@(_show ? "text" : "password")"
                        AppendIcon="@(_show ? "mdi-eye" : "mdi-eye-off")"
                        OnAppendClick="()=>_show = !_show"
                        Outlined
                        HideDetails="@("auto")">
            </MTextField>
            <MButton Class="mt-11 rounded-4 text-btn white--text" OnClick=OnLogin Height=46 Width=340 Color="primary">Login</MButton>
        </div>
    </MCard>
</div>

@code
{
    [Inject]
    IJSRuntime? jSRuntime { get; set; }

    private bool _show;

    [Inject]
    public NavigationManager Navigation { get; set; } = default!;

    [Inject]
    public IPopupService PopupService { get; set; }

    [Parameter]
    public bool HideLogo { get; set; }

    [Parameter]
    public double Width { get; set; } = 410;

    [Parameter]
    public StringNumber? Elevation { get; set; }

    IJSObjectReference? jSObjectReference { get; set; }

    string? UserName { get; set; }
    string? Password { get; set; }

    public async Task OnLogin()
    {
        var result= await jSObjectReference!.InvokeAsync<System.Text.Json.JsonDocument>("execute",new CMS.AdminComponents.AjaxOption {
            Url= "api/Account/Login",
            Data=new UserModel { username=UserName,password=Password}
        });

        var val = System.Text.Json.JsonSerializer.Deserialize<LoginResultModel>(result.RootElement.ToString());
        if(val?.code==1)
        {
            Navigation.NavigateTo("/admin/home");
        }
        else
        {
            await PopupService.AlertAsync(val.msg);
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
        {
            var path = "/js/ajax.js";
            jSObjectReference = await jSRuntime!.InvokeAsync<IJSObjectReference>(identifier: "import", $"{path}");
        }
    }

    //[Inject]
    //NavigationManager navigationManager { get; set; }

    //[Inject]
    //AjaxService AjaxService { get; set; }

    //[Inject]
    //MessageService messageService { get; set; }

    //UserModel user = new UserModel();

    //async Task OnLogin()
    //{
    //    var option = new AjaxOption
    //    {
    //        Url = "api/Account/Login",
    //        Data = user
    //    };
    //    var result = await AjaxService.InvokeAsync(option);
    //    try
    //    {
    //        var str = result.RootElement.ToString();
    //            var model = Newtonsoft.Json.JsonConvert.DeserializeObject<LoginResultModel>(result.RootElement.ToString());
    //        if (model.Code == 1)
    //        {
    //            navigationManager.NavigateTo("/", true);
    //        }
    //        else
    //        {
    //            await messageService.Show(new MessageOption { Content = model.Msg, Color = Color.Danger });
    //        }
    //    }
    //    catch
    //    {
    //        await messageService.Show(new MessageOption { Content = "登录失败", Color = Color.Danger });
    //        user.UserName = "";
    //        user.Password = "";
    //    }
    //}

    //async Task OnKeyup(KeyboardEventArgs e)
    //{
    //    if (e.Code == "Enter")
    //    {
    //        await OnLogin();
    //    }
    //}
}
